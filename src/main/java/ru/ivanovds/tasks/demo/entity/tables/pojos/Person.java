/*
 * This file is generated by jOOQ.
 */
package ru.ivanovds.tasks.demo.entity.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Person implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private String post;
    private String name;
    private String surName;
    private String middleName;
    private String branchName;
    private Long fkDirectorPersonId;

    public Person() {}

    public Person(Person value) {
        this.id = value.id;
        this.post = value.post;
        this.name = value.name;
        this.surName = value.surName;
        this.middleName = value.middleName;
        this.branchName = value.branchName;
        this.fkDirectorPersonId = value.fkDirectorPersonId;
    }

    public Person(
        Long id,
        String post,
        String name,
        String surName,
        String middleName,
        String branchName,
        Long fkDirectorPersonId
    ) {
        this.id = id;
        this.post = post;
        this.name = name;
        this.surName = surName;
        this.middleName = middleName;
        this.branchName = branchName;
        this.fkDirectorPersonId = fkDirectorPersonId;
    }

    /**
     * Getter for <code>public.person.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.person.id</code>.
     */
    public Person setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.person.post</code>.
     */
    public String getPost() {
        return this.post;
    }

    /**
     * Setter for <code>public.person.post</code>.
     */
    public Person setPost(String post) {
        this.post = post;
        return this;
    }

    /**
     * Getter for <code>public.person.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>public.person.name</code>.
     */
    public Person setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>public.person.sur_name</code>.
     */
    public String getSurName() {
        return this.surName;
    }

    /**
     * Setter for <code>public.person.sur_name</code>.
     */
    public Person setSurName(String surName) {
        this.surName = surName;
        return this;
    }

    /**
     * Getter for <code>public.person.middle_name</code>.
     */
    public String getMiddleName() {
        return this.middleName;
    }

    /**
     * Setter for <code>public.person.middle_name</code>.
     */
    public Person setMiddleName(String middleName) {
        this.middleName = middleName;
        return this;
    }

    /**
     * Getter for <code>public.person.branch_name</code>.
     */
    public String getBranchName() {
        return this.branchName;
    }

    /**
     * Setter for <code>public.person.branch_name</code>.
     */
    public Person setBranchName(String branchName) {
        this.branchName = branchName;
        return this;
    }

    /**
     * Getter for <code>public.person.fk_director_person_id</code>.
     */
    public Long getFkDirectorPersonId() {
        return this.fkDirectorPersonId;
    }

    /**
     * Setter for <code>public.person.fk_director_person_id</code>.
     */
    public Person setFkDirectorPersonId(Long fkDirectorPersonId) {
        this.fkDirectorPersonId = fkDirectorPersonId;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Person other = (Person) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.post == null) {
            if (other.post != null)
                return false;
        }
        else if (!this.post.equals(other.post))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.surName == null) {
            if (other.surName != null)
                return false;
        }
        else if (!this.surName.equals(other.surName))
            return false;
        if (this.middleName == null) {
            if (other.middleName != null)
                return false;
        }
        else if (!this.middleName.equals(other.middleName))
            return false;
        if (this.branchName == null) {
            if (other.branchName != null)
                return false;
        }
        else if (!this.branchName.equals(other.branchName))
            return false;
        if (this.fkDirectorPersonId == null) {
            if (other.fkDirectorPersonId != null)
                return false;
        }
        else if (!this.fkDirectorPersonId.equals(other.fkDirectorPersonId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.post == null) ? 0 : this.post.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.surName == null) ? 0 : this.surName.hashCode());
        result = prime * result + ((this.middleName == null) ? 0 : this.middleName.hashCode());
        result = prime * result + ((this.branchName == null) ? 0 : this.branchName.hashCode());
        result = prime * result + ((this.fkDirectorPersonId == null) ? 0 : this.fkDirectorPersonId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Person (");

        sb.append(id);
        sb.append(", ").append(post);
        sb.append(", ").append(name);
        sb.append(", ").append(surName);
        sb.append(", ").append(middleName);
        sb.append(", ").append(branchName);
        sb.append(", ").append(fkDirectorPersonId);

        sb.append(")");
        return sb.toString();
    }
}
