/*
 * This file is generated by jOOQ.
 */
package ru.ivanovds.tasks.demo.entity;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;

import ru.ivanovds.tasks.demo.entity.tables.Databasechangeloglock;
import ru.ivanovds.tasks.demo.entity.tables.Person;
import ru.ivanovds.tasks.demo.entity.tables.Task;
import ru.ivanovds.tasks.demo.entity.tables.records.DatabasechangeloglockRecord;
import ru.ivanovds.tasks.demo.entity.tables.records.PersonRecord;
import ru.ivanovds.tasks.demo.entity.tables.records.TaskRecord;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<PersonRecord> PK_PERSON = Internal.createUniqueKey(Person.PERSON, DSL.name("pk_person"), new TableField[] { Person.PERSON.ID }, true);
    public static final UniqueKey<PersonRecord> UC_PERSON_ID = Internal.createUniqueKey(Person.PERSON, DSL.name("uc_person_id"), new TableField[] { Person.PERSON.ID }, true);
    public static final UniqueKey<TaskRecord> PK_TASK = Internal.createUniqueKey(Task.TASK, DSL.name("pk_task"), new TableField[] { Task.TASK.ID }, true);
    public static final UniqueKey<TaskRecord> UC_TASK_ID = Internal.createUniqueKey(Task.TASK, DSL.name("uc_task_id"), new TableField[] { Task.TASK.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<PersonRecord, PersonRecord> PERSON__PERSON_DIRECTOR_ID_FKEY = Internal.createForeignKey(Person.PERSON, DSL.name("person_director_id_fkey"), new TableField[] { Person.PERSON.FK_DIRECTOR_PERSON_ID }, Keys.PK_PERSON, new TableField[] { Person.PERSON.ID }, true);
    public static final ForeignKey<TaskRecord, PersonRecord> TASK__FK_TASK_ON_PERSON = Internal.createForeignKey(Task.TASK, DSL.name("fk_task_on_person"), new TableField[] { Task.TASK.PERSON_ID }, Keys.PK_PERSON, new TableField[] { Person.PERSON.ID }, true);
}
