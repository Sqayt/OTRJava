/*
 * This file is generated by jOOQ.
 */
package ru.ivanovds.tasks.demo.entity.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ru.ivanovds.tasks.demo.entity.tables.Person;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PersonRecord extends UpdatableRecordImpl<PersonRecord> implements Record7<Long, String, String, String, String, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.person.id</code>.
     */
    public PersonRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.person.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.person.post</code>.
     */
    public PersonRecord setPost(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.person.post</code>.
     */
    public String getPost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.person.name</code>.
     */
    public PersonRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.person.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.person.sur_name</code>.
     */
    public PersonRecord setSurName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.person.sur_name</code>.
     */
    public String getSurName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.person.middle_name</code>.
     */
    public PersonRecord setMiddleName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.person.middle_name</code>.
     */
    public String getMiddleName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.person.branch_name</code>.
     */
    public PersonRecord setBranchName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.person.branch_name</code>.
     */
    public String getBranchName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.person.fk_director_person_id</code>.
     */
    public PersonRecord setFkDirectorPersonId(Long value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.person.fk_director_person_id</code>.
     */
    public Long getFkDirectorPersonId() {
        return (Long) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, String, String, String, String, String, Long> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, String, String, String, String, String, Long> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Person.PERSON.ID;
    }

    @Override
    public Field<String> field2() {
        return Person.PERSON.POST;
    }

    @Override
    public Field<String> field3() {
        return Person.PERSON.NAME;
    }

    @Override
    public Field<String> field4() {
        return Person.PERSON.SUR_NAME;
    }

    @Override
    public Field<String> field5() {
        return Person.PERSON.MIDDLE_NAME;
    }

    @Override
    public Field<String> field6() {
        return Person.PERSON.BRANCH_NAME;
    }

    @Override
    public Field<Long> field7() {
        return Person.PERSON.FK_DIRECTOR_PERSON_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPost();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getSurName();
    }

    @Override
    public String component5() {
        return getMiddleName();
    }

    @Override
    public String component6() {
        return getBranchName();
    }

    @Override
    public Long component7() {
        return getFkDirectorPersonId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPost();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getSurName();
    }

    @Override
    public String value5() {
        return getMiddleName();
    }

    @Override
    public String value6() {
        return getBranchName();
    }

    @Override
    public Long value7() {
        return getFkDirectorPersonId();
    }

    @Override
    public PersonRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public PersonRecord value2(String value) {
        setPost(value);
        return this;
    }

    @Override
    public PersonRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public PersonRecord value4(String value) {
        setSurName(value);
        return this;
    }

    @Override
    public PersonRecord value5(String value) {
        setMiddleName(value);
        return this;
    }

    @Override
    public PersonRecord value6(String value) {
        setBranchName(value);
        return this;
    }

    @Override
    public PersonRecord value7(Long value) {
        setFkDirectorPersonId(value);
        return this;
    }

    @Override
    public PersonRecord values(Long value1, String value2, String value3, String value4, String value5, String value6, Long value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PersonRecord
     */
    public PersonRecord() {
        super(Person.PERSON);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(Long id, String post, String name, String surName, String middleName, String branchName, Long fkDirectorPersonId) {
        super(Person.PERSON);

        setId(id);
        setPost(post);
        setName(name);
        setSurName(surName);
        setMiddleName(middleName);
        setBranchName(branchName);
        setFkDirectorPersonId(fkDirectorPersonId);
    }

    /**
     * Create a detached, initialised PersonRecord
     */
    public PersonRecord(ru.ivanovds.tasks.demo.entity.tables.pojos.Person value) {
        super(Person.PERSON);

        if (value != null) {
            setId(value.getId());
            setPost(value.getPost());
            setName(value.getName());
            setSurName(value.getSurName());
            setMiddleName(value.getMiddleName());
            setBranchName(value.getBranchName());
            setFkDirectorPersonId(value.getFkDirectorPersonId());
        }
    }
}
